version: '3.8'

services:
  # Service Frontend
  frontend:
    build: ./frontend
    container_name: studyhub-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - studyhub-network

  # Service Backend API
  backend:
    build: ./backend
    container_name: studyhub-backend
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_SERVER=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=studyhub
      - MONGODB_URL=mongodb://mongodb:27017
      - MONGODB_DB=studyhub
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - REDIS_URL=redis://redis:6379/0
      - MINIO_URL=minio:9000
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - REFRESH_SECRET_KEY=${REFRESH_SECRET_KEY:-anothersecretkey}
    volumes:
      - ./backend:/app
    depends_on:
      - postgres
      - mongodb
      - rabbitmq
      - redis
      - minio
    networks:
      - studyhub-network

  # Service OCR (Reconnaissance d'écriture)
  ocr-service:
    build: ./ai-services/ocr-service
    container_name: studyhub-ocr
    environment:
      - OCR_MODEL_PATH=/app/models
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    volumes:
      - ocr-models:/app/models
    depends_on:
      - rabbitmq
    networks:
      - studyhub-network

  # Service NLP (Traitement du langage naturel)
  nlp-service:
    build: ./ai-services/nlp-service
    container_name: studyhub-nlp
    environment:
      - NLP_MODEL_PATH=/app/models
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
    volumes:
      - nlp-models:/app/models
    depends_on:
      - rabbitmq
    networks:
      - studyhub-network

  # Base de données PostgreSQL
  postgres:
    image: postgres:13-alpine
    container_name: studyhub-postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=studyhub
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - studyhub-network

  # Base de données MongoDB
  mongodb:
    image: mongo:5.0
    container_name: studyhub-mongodb
    volumes:
      - mongodb-data:/data/db
    ports:
      - "27017:27017"
    networks:
      - studyhub-network

  # Service de messagerie RabbitMQ
  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: studyhub-rabbitmq
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    ports:
      - "5672:5672"   # AMQP
      - "15672:15672" # Management UI
    networks:
      - studyhub-network

  # Service de cache Redis
  redis:
    image: redis:6-alpine
    container_name: studyhub-redis
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - studyhub-network

  # Service de stockage d'objets MinIO
  minio:
    image: minio/minio
    container_name: studyhub-minio
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"   # API
      - "9001:9001"   # Console
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
    command: server /data --console-address ":9001"
    networks:
      - studyhub-network

networks:
  studyhub-network:
    driver: bridge

volumes:
  postgres-data:
  mongodb-data:
  rabbitmq-data:
  redis-data:
  minio-data:
  ocr-models:
  nlp-models:
